[29/09/22 10:15:47:047 IST] DEBUG jboss.logging: Logging Provider: org.jboss.logging.Log4jLoggerProvider
[29/09/22 10:15:47:047 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[29/09/22 10:15:47:047 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[29/09/22 10:15:47:047 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[29/09/22 10:15:47:047 IST]  INFO hibernate.Version: HHH000412: Hibernate ORM core version 5.6.11.Final
[29/09/22 10:15:47:047 IST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[29/09/22 10:15:48:048 IST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[29/09/22 10:15:48:048 IST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[29/09/22 10:15:48:048 IST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[29/09/22 10:15:48:048 IST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[29/09/22 10:15:48:048 IST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[29/09/22 10:15:48:048 IST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@404bbcbd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@404bbcbd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6986852
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e01f9b0
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@658c5a19
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@34f6515b
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@34f6515b
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34f6515b
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@78a773fd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@78a773fd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@78a773fd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@135606db
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@135606db
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@135606db
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@58594a11
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@58594a11
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58594a11
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@68f1b17f
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@68f1b17f
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@68f1b17f
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@398dada8
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@398dada8
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@398dada8
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@12a94400
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@12a94400
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12a94400
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11bb571c
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11bb571c
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@125290e5
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@125290e5
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1205bd62
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1205bd62
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6337c201
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d483de4
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@3b74ac8
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b74ac8
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@563e4951
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@563e4951
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5e403b4a
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e403b4a
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19e7a160
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19e7a160
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cb6decd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cb6decd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e6f3f28
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e6f3f28
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5717c37
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5717c37
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c01cfa1
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c01cfa1
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@50dfbc58
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@50dfbc58
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@5a5338df
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a5338df
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@302f7971
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302f7971
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@3370f42
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3370f42
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3370f42
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53251a66
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@282cb7c7
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@282cb7c7
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@282cb7c7
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68d279ec
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5965be2d
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@71e693fa
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71e693fa
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@7aaca91a
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aaca91a
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2141a12
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2141a12
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@573906eb
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@573906eb
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68dc098b
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68dc098b
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d6c53fc
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@3148f668
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@3148f668
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@3148f668
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59e32960
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59e32960
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59e32960
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@56c4278e
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@341814d3
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@119cbf96
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@119cbf96
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@119cbf96
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@455b6df1
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@455b6df1
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@455b6df1
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@1ab06251
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@1115ec15
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@37e4d7bb
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37e4d7bb
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54eb2b70
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@6c2ed0cd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c2ed0cd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@60410cd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60410cd
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@38604b81
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@babafc2
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@457c9034
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@6f44a157
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f44a157
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17d88132
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ddcc487
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16eccb2e
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5ef5c734
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d771cc9
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36b4091c
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4671115f
[29/09/22 10:15:48:048 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36cda2c2
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:15:48:048 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[29/09/22 10:15:50:050 IST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
[29/09/22 10:15:50:050 IST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
[29/09/22 10:15:50:050 IST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[29/09/22 10:15:50:050 IST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL57InnoDBDialect
[29/09/22 10:15:50:050 IST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[29/09/22 10:15:50:050 IST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[29/09/22 10:15:50:050 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27e0f2f5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3574e198]
[29/09/22 10:15:50:050 IST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[29/09/22 10:15:50:050 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spitter
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:15:50:050 IST] DEBUG annotations.EntityBinder: Import with entity name Spitter
[29/09/22 10:15:50:050 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spitter on table Spitter
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:15:50:050 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:id]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:15:50:050 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=email, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property email with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:email]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for email
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property email
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property fullName with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:fullName]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for fullName
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property fullName
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=password, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property password with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:password]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for password
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property password
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=updateByEmail, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property updateByEmail with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:updateByEmail]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for updateByEmail
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property updateByEmail
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=username, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property username with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:username]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for username
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property username
[29/09/22 10:15:50:050 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spittle
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:15:50:050 IST] DEBUG annotations.EntityBinder: Import with entity name Spittle
[29/09/22 10:15:50:050 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spittle on table Spittle
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:15:50:050 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:id]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:15:50:050 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=message, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property message with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:message]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for message
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property message
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=postedTime, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property postedTime with lazy=false
[29/09/22 10:15:50:050 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:postedTime]
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for postedTime
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property postedTime
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='spitter', referencedColumn='', mappedBy=''}
[29/09/22 10:15:50:050 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=spitter, insertable=true, updatable=true, unique=false}
[29/09/22 10:15:50:050 IST] DEBUG annotations.PropertyBinder: Building property spitter
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for email
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for fullName
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for password
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for updateByEmail
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for username
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for message
[29/09/22 10:15:50:050 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for postedTime
[29/09/22 10:15:50:050 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spitter]
[29/09/22 10:15:50:050 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spittle]
[29/09/22 10:15:50:050 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:15:50:050 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:15:50:050 IST] DEBUG internal.SessionFactoryImpl: Building session factory
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: SessionFactory name : null
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Statistics: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Default entity-mode: pojo
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Default batch fetch size: -1
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Default null ordering: NONE
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Query language substitutions: {}
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Named query checking : enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Second-level cache: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Second-level query cache: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Second-level query cache factory: null
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Second-level cache region prefix: null
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JDBC batch size: 15
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Scrollable result sets: enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Wrap result sets: disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JDBC result set fetch size: null
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Connection release mode: ON_CLOSE
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: Generate SQL with comments: enabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JPA compliance - query : disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JPA compliance - closed-handling : disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JPA compliance - lists : disabled
[29/09/22 10:15:50:050 IST] DEBUG cfg.Settings: JPA compliance - transactions : disabled
[29/09/22 10:15:51:051 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:15:51:051 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:15:51:051 IST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[29/09/22 10:15:51:051 IST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1f12e153, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect, java.class.path=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\test-classes;C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\classes;C:\Users\Narayan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Narayan\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\Narayan\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-dbcp2\2.9.0\commons-dbcp2-2.9.0.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-pool2\2.10.0\commons-pool2-2.10.0.jar;C:\Users\Narayan\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.11.Final\hibernate-entitymanager-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-core\5.6.11.Final\hibernate-core-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Narayan\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Narayan\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Narayan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Narayan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Narayan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Narayan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Narayan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Narayan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Narayan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Narayan\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\Narayan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-orm\5.3.23\spring-orm-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jdbc\5.3.23\spring-jdbc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-tx\5.3.23\spring-tx-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-webmvc\5.3.23\spring-webmvc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-web\5.3.23\spring-web-5.3.23.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\java_home\java_old\jdk1.8.0_202\jre\bin, hibernate.use_sql_comments=true, sun.java.command=com.souritra.test.common.Test, sun.cpu.endian=little, user.home=C:\Users\Narayan, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\java_home\java_old\jdk1.8.0_202\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\java_home\java_old\jdk1.8.0_202\jre\lib\resources.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\rt.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jsse.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jce.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\charsets.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jfr.jar;C:\java_home\java_old\jdk1.8.0_202\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_202-b08, user.name=Narayan, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@73d16e93], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Narayan\AppData\Local\Temp\, java.version=1.8.0_202, user.dir=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@389562d6, java.library.path=C:\java_home\java_old\jdk1.8.0_202\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin/server;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/lib/amd64;C:\java_home\java_old\jdk1.8.0_202\bin;C:\home_kafka\confluent_latest_windows_amd64\confluent;Z:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\home_tools\gradle-7.0-all\gradle-7.0\bin;C:\home_tools\apache-maven-3.6.3\bin;C:\home_tools\gradle-6.8.2\bin;C:\Python27\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\WINDOWS\System32\OpenSSH\;C:\home_scala\bin;C:\home_tools\sbt\bin;C:\home_tools\Git\cmd;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\home_tools\sbt-1.6.2\sbt\\bin;C:\home_bigdata_tools\kafka_2.12-1.0.0\bin\windows;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\;C:\Users\Narayan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Narayan\AppData\Local\Programs\Microsoft VS Code\bin;C:\home_ide\spring-tool-suite-3.9.7\sts-bundle\sts-3.9.7.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.202-b08, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.apache.commons.dbcp2.BasicDataSource@2f112965, java.ext.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[29/09/22 10:15:51:051 IST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[29/09/22 10:15:51:051 IST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[29/09/22 10:15:51:051 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27e0f2f5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ecd665]
[29/09/22 10:15:51:051 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:15:51:051 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:15:51:051 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:15:51:051 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:15:51:051 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:15:51:051 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:15:51:051 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:15:51:051 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spittle
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spittle */ select id from Spittle where id =?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spittle */ select spittle_.id, spittle_.message as message2_1_, spittle_.postedTime as postedti3_1_, spittle_.spitter as spitter4_1_ from Spittle spittle_ where spittle_.id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter, id) values (?, ?, ?, ?)
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spittle */ update Spittle set message=?, postedTime=?, spitter=? where id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spittle */ delete from Spittle where id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter) values (?, ?, ?)
[29/09/22 10:15:52:052 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac0b715]
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : message
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : postedTime
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter
[29/09/22 10:15:52:052 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4cd155]
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.email
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.fullName
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.password
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.updateByEmail
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.username
[29/09/22 10:15:52:052 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:15:52:052 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:15:52:052 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spittle)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spittle, querySpaceUid=<gen:0>, path=spittr.domain.Spittle)
          - EntityAttributeFetchImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:1>, path=spittr.domain.Spittle.spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spittle)
          - SQL table alias mapping - spittle0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(spitter)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=spittr.domain.Spitter)
                - SQL table alias mapping - spitter1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[29/09/22 10:15:52:052 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spittle [NONE]: select spittle0_.id as id1_1_0_, spittle0_.message as message2_1_0_, spittle0_.postedTime as postedti3_1_0_, spittle0_.spitter as spitter4_1_0_, spitter1_.id as id1_0_1_, spitter1_.email as email2_0_1_, spitter1_.fullname as fullname3_0_1_, spitter1_.password as password4_0_1_, spitter1_.updateByEmail as updateby5_0_1_, spitter1_.username as username6_0_1_ from Spittle spittle0_ left outer join Spitter spitter1_ on spittle0_.spitter=spitter1_.id where spittle0_.id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spitter
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spitter */ select id from Spitter where id =?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spitter */ select spitter_.id, spitter_.email as email2_0_, spitter_.fullname as fullname3_0_, spitter_.password as password4_0_, spitter_.updateByEmail as updateby5_0_, spitter_.username as username6_0_ from Spitter spitter_ where spitter_.id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username, id) values (?, ?, ?, ?, ?, ?)
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spitter */ update Spitter set email=?, fullname=?, password=?, updateByEmail=?, username=? where id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spitter */ delete from Spitter where id=?
[29/09/22 10:15:52:052 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username) values (?, ?, ?, ?, ?)
[29/09/22 10:15:52:052 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45667d98]
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : email
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : fullName
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : password
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : updateByEmail
[29/09/22 10:15:52:052 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : username
[29/09/22 10:15:52:052 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:15:52:052 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:15:52:052 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spitter)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:0>, path=spittr.domain.Spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spitter)
          - SQL table alias mapping - spitter0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[29/09/22 10:15:52:052 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spitter [NONE]: select spitter0_.id as id1_0_0_, spitter0_.email as email2_0_0_, spitter0_.fullname as fullname3_0_0_, spitter0_.password as password4_0_0_, spitter0_.updateByEmail as updateby5_0_0_, spitter0_.username as username6_0_0_ from Spitter spitter0_ where spitter0_.id=?
[29/09/22 10:15:52:052 IST] DEBUG mapping.Table: No alter strings for table : Spitter
[29/09/22 10:15:52:052 IST] DEBUG mapping.Table: No alter strings for table : Spittle
[29/09/22 10:15:52:052 IST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[29/09/22 10:15:52:052 IST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[29/09/22 10:15:52:052 IST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:15:52:052 IST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:15:52:052 IST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[29/09/22 10:15:52:052 IST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[29/09/22 10:15:52:052 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:15:52:052 IST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@35e8316e
[29/09/22 10:15:52:052 IST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 5909f77e-ce9e-4efe-84e6-2bd60c042fd9 (<unnamed>)
[29/09/22 10:15:52:052 IST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[29/09/22 10:45:13:013 IST] DEBUG jboss.logging: Logging Provider: org.jboss.logging.Log4jLoggerProvider
[29/09/22 10:45:13:013 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[29/09/22 10:45:13:013 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[29/09/22 10:45:13:013 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[29/09/22 10:45:13:013 IST]  INFO hibernate.Version: HHH000412: Hibernate ORM core version 5.6.11.Final
[29/09/22 10:45:13:013 IST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[29/09/22 10:45:14:014 IST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[29/09/22 10:45:14:014 IST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[29/09/22 10:45:14:014 IST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[29/09/22 10:45:14:014 IST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[29/09/22 10:45:14:014 IST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[29/09/22 10:45:14:014 IST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7cb502c
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7cb502c
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7cb502c
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fbe37eb
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@2049a9c1
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@11bb571c
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@125290e5
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@125290e5
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@125290e5
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@1205bd62
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@1205bd62
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1205bd62
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@31920ade
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@31920ade
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@31920ade
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@55cf0d14
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@55cf0d14
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55cf0d14
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@1fd14d74
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@1fd14d74
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@1fd14d74
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1ae8bcbc
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1ae8bcbc
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ae8bcbc
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6d026701
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6d026701
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d026701
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6304101a
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6304101a
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a72a540
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a72a540
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@5be49b60
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@5be49b60
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19e7a160
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16b2bb0c
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6aa61224
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6aa61224
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@7357a011
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7357a011
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@11f0a5a1
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@11f0a5a1
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bf08014
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bf08014
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a5338df
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a5338df
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@302f7971
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@302f7971
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3370f42
[29/09/22 10:45:14:014 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3370f42
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@352c1b98
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@352c1b98
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d286fb6
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d286fb6
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@7fcf2fc1
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7fcf2fc1
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@20435c40
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20435c40
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@488d1cd7
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@488d1cd7
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@488d1cd7
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d278d2b
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3081f72c
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3081f72c
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3081f72c
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ceb3185
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b67bb7e
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@3d246ea3
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3d246ea3
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6f19ac19
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f19ac19
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@20c0a64d
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20c0a64d
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@41ab013
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41ab013
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3af0a9da
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3af0a9da
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8e50104
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@45a37759
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@45a37759
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@45a37759
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1838ccb8
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1838ccb8
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1838ccb8
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@4b213651
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@60410cd
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7393222f
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7393222f
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7393222f
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3688eb5b
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3688eb5b
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3688eb5b
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@457c9034
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@3f57bcad
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@7daa0fbd
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7daa0fbd
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@181e731e
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@16eccb2e
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16eccb2e
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1583741e
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1583741e
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@481ba2cf
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1efe439d
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@1b75c2e3
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@1339e7aa
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1339e7aa
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6239aba6
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e6104fc
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12359a82
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68df9280
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@479460a6
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7164ca4c
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[29/09/22 10:45:15:015 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:45:15:015 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[29/09/22 10:45:16:016 IST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
[29/09/22 10:45:16:016 IST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
[29/09/22 10:45:16:016 IST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[29/09/22 10:45:16:016 IST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL57InnoDBDialect
[29/09/22 10:45:17:017 IST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[29/09/22 10:45:17:017 IST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[29/09/22 10:45:17:017 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@410954b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7fb9f71f]
[29/09/22 10:45:17:017 IST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[29/09/22 10:45:17:017 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spitter
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:45:17:017 IST] DEBUG annotations.EntityBinder: Import with entity name Spitter
[29/09/22 10:45:17:017 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spitter on table Spitter
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:45:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:id]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:45:17:017 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=email, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property email with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:email]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for email
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property email
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property fullName with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:fullName]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for fullName
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property fullName
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=password, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property password with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:password]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for password
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property password
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=updateByEmail, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property updateByEmail with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:updateByEmail]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for updateByEmail
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property updateByEmail
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=username, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property username with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:username]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for username
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property username
[29/09/22 10:45:17:017 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spittle
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:45:17:017 IST] DEBUG annotations.EntityBinder: Import with entity name Spittle
[29/09/22 10:45:17:017 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spittle on table Spittle
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:45:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:id]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:45:17:017 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=message, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property message with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:message]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for message
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property message
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=postedTime, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property postedTime with lazy=false
[29/09/22 10:45:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:postedTime]
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for postedTime
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property postedTime
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='spitter', referencedColumn='', mappedBy=''}
[29/09/22 10:45:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=spitter, insertable=true, updatable=true, unique=false}
[29/09/22 10:45:17:017 IST] DEBUG annotations.PropertyBinder: Building property spitter
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for email
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for fullName
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for password
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for updateByEmail
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for username
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for message
[29/09/22 10:45:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for postedTime
[29/09/22 10:45:17:017 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spitter]
[29/09/22 10:45:17:017 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spittle]
[29/09/22 10:45:17:017 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:45:17:017 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:45:17:017 IST] DEBUG internal.SessionFactoryImpl: Building session factory
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: SessionFactory name : null
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Statistics: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Default entity-mode: pojo
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Default batch fetch size: -1
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Default null ordering: NONE
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Query language substitutions: {}
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Named query checking : enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Second-level cache: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Second-level query cache: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Second-level query cache factory: null
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Second-level cache region prefix: null
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JDBC batch size: 15
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Scrollable result sets: enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Wrap result sets: disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JDBC result set fetch size: null
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Connection release mode: ON_CLOSE
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: Generate SQL with comments: enabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JPA compliance - query : disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JPA compliance - closed-handling : disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JPA compliance - lists : disabled
[29/09/22 10:45:17:017 IST] DEBUG cfg.Settings: JPA compliance - transactions : disabled
[29/09/22 10:45:17:017 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:45:17:017 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:45:17:017 IST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[29/09/22 10:45:17:017 IST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4d6f197e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect, java.class.path=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\test-classes;C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\classes;C:\Users\Narayan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Narayan\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\Narayan\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-dbcp2\2.9.0\commons-dbcp2-2.9.0.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-pool2\2.10.0\commons-pool2-2.10.0.jar;C:\Users\Narayan\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Narayan\.m2\repository\com\zaxxer\HikariCP\3.0.0\HikariCP-3.0.0.jar;C:\Users\Narayan\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.11.Final\hibernate-entitymanager-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-core\5.6.11.Final\hibernate-core-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Narayan\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Narayan\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Narayan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Narayan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Narayan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Narayan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Narayan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Narayan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Narayan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Narayan\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\Narayan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-orm\5.3.23\spring-orm-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jdbc\5.3.23\spring-jdbc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-tx\5.3.23\spring-tx-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-webmvc\5.3.23\spring-webmvc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-web\5.3.23\spring-web-5.3.23.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\java_home\java_old\jdk1.8.0_202\jre\bin, hibernate.use_sql_comments=true, sun.java.command=com.souritra.test.common.Test, sun.cpu.endian=little, user.home=C:\Users\Narayan, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\java_home\java_old\jdk1.8.0_202\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\java_home\java_old\jdk1.8.0_202\jre\lib\resources.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\rt.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jsse.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jce.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\charsets.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jfr.jar;C:\java_home\java_old\jdk1.8.0_202\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_202-b08, user.name=Narayan, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@73d16e93], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Narayan\AppData\Local\Temp\, java.version=1.8.0_202, user.dir=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ef7623, java.library.path=C:\java_home\java_old\jdk1.8.0_202\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin/server;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/lib/amd64;C:\java_home\java_old\jdk1.8.0_202\bin;C:\home_kafka\confluent_latest_windows_amd64\confluent;Z:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\home_tools\gradle-7.0-all\gradle-7.0\bin;C:\home_tools\apache-maven-3.6.3\bin;C:\home_tools\gradle-6.8.2\bin;C:\Python27\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\WINDOWS\System32\OpenSSH\;C:\home_scala\bin;C:\home_tools\sbt\bin;C:\home_tools\Git\cmd;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\home_tools\sbt-1.6.2\sbt\\bin;C:\home_bigdata_tools\kafka_2.12-1.0.0\bin\windows;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\;C:\Users\Narayan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Narayan\AppData\Local\Programs\Microsoft VS Code\bin;C:\home_ide\spring-tool-suite-3.9.7\sts-bundle\sts-3.9.7.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.202-b08, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.apache.commons.dbcp2.BasicDataSource@1e802ef9, java.ext.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[29/09/22 10:45:17:017 IST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[29/09/22 10:45:17:017 IST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[29/09/22 10:45:17:017 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@410954b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5f462e3b]
[29/09/22 10:45:18:018 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:45:18:018 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:45:18:018 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:45:18:018 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:45:18:018 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:45:18:018 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:45:18:018 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:45:18:018 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spittle
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spittle */ select id from Spittle where id =?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spittle */ select spittle_.id, spittle_.message as message2_1_, spittle_.postedTime as postedti3_1_, spittle_.spitter as spitter4_1_ from Spittle spittle_ where spittle_.id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter, id) values (?, ?, ?, ?)
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spittle */ update Spittle set message=?, postedTime=?, spitter=? where id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spittle */ delete from Spittle where id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter) values (?, ?, ?)
[29/09/22 10:45:18:018 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ad7bf0]
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : message
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : postedTime
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter
[29/09/22 10:45:18:018 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70211e49]
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.email
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.fullName
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.password
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.updateByEmail
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.username
[29/09/22 10:45:18:018 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:45:18:018 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:45:18:018 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spittle)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spittle, querySpaceUid=<gen:0>, path=spittr.domain.Spittle)
          - EntityAttributeFetchImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:1>, path=spittr.domain.Spittle.spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spittle)
          - SQL table alias mapping - spittle0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(spitter)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=spittr.domain.Spitter)
                - SQL table alias mapping - spitter1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[29/09/22 10:45:18:018 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spittle [NONE]: select spittle0_.id as id1_1_0_, spittle0_.message as message2_1_0_, spittle0_.postedTime as postedti3_1_0_, spittle0_.spitter as spitter4_1_0_, spitter1_.id as id1_0_1_, spitter1_.email as email2_0_1_, spitter1_.fullname as fullname3_0_1_, spitter1_.password as password4_0_1_, spitter1_.updateByEmail as updateby5_0_1_, spitter1_.username as username6_0_1_ from Spittle spittle0_ left outer join Spitter spitter1_ on spittle0_.spitter=spitter1_.id where spittle0_.id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spitter
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spitter */ select id from Spitter where id =?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spitter */ select spitter_.id, spitter_.email as email2_0_, spitter_.fullname as fullname3_0_, spitter_.password as password4_0_, spitter_.updateByEmail as updateby5_0_, spitter_.username as username6_0_ from Spitter spitter_ where spitter_.id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username, id) values (?, ?, ?, ?, ?, ?)
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spitter */ update Spitter set email=?, fullname=?, password=?, updateByEmail=?, username=? where id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spitter */ delete from Spitter where id=?
[29/09/22 10:45:18:018 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username) values (?, ?, ?, ?, ?)
[29/09/22 10:45:18:018 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e05f61]
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : email
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : fullName
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : password
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : updateByEmail
[29/09/22 10:45:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : username
[29/09/22 10:45:18:018 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:45:18:018 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:45:18:018 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spitter)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:0>, path=spittr.domain.Spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spitter)
          - SQL table alias mapping - spitter0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[29/09/22 10:45:18:018 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spitter [NONE]: select spitter0_.id as id1_0_0_, spitter0_.email as email2_0_0_, spitter0_.fullname as fullname3_0_0_, spitter0_.password as password4_0_0_, spitter0_.updateByEmail as updateby5_0_0_, spitter0_.username as username6_0_0_ from Spitter spitter0_ where spitter0_.id=?
[29/09/22 10:45:19:019 IST] DEBUG mapping.Table: No alter strings for table : Spitter
[29/09/22 10:45:19:019 IST] DEBUG mapping.Table: No alter strings for table : Spittle
[29/09/22 10:45:19:019 IST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[29/09/22 10:45:19:019 IST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[29/09/22 10:45:19:019 IST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:45:19:019 IST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:45:19:019 IST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[29/09/22 10:45:19:019 IST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[29/09/22 10:45:19:019 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:45:19:019 IST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@350a94ce
[29/09/22 10:45:19:019 IST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: 6fc410c6-d9ad-4ba1-9c83-304e719e2352 (<unnamed>)
[29/09/22 10:45:19:019 IST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[29/09/22 10:54:39:039 IST] DEBUG jboss.logging: Logging Provider: org.jboss.logging.Log4jLoggerProvider
[29/09/22 10:54:39:039 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[29/09/22 10:54:39:039 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[29/09/22 10:54:39:039 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[29/09/22 10:54:39:039 IST]  INFO hibernate.Version: HHH000412: Hibernate ORM core version 5.6.11.Final
[29/09/22 10:54:39:039 IST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[29/09/22 10:54:40:040 IST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[29/09/22 10:54:40:040 IST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[29/09/22 10:54:40:040 IST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[29/09/22 10:54:40:040 IST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[29/09/22 10:54:40:040 IST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[29/09/22 10:54:40:040 IST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ed3068a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ed3068a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ed3068a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a8e6492
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b324585
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@662f5666
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@502f1f4c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@502f1f4c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@502f1f4c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@4fbda97b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@4fbda97b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fbda97b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4879f0f2
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4879f0f2
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879f0f2
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5b43fbf6
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5b43fbf6
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b43fbf6
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@a4b2d8f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@a4b2d8f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@a4b2d8f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@2fea7088
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@2fea7088
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fea7088
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40f1be1b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40f1be1b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40f1be1b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b9ce1bf
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b9ce1bf
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@609640d5
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@609640d5
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@62ea3440
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@62ea3440
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66ce957f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@666b83a4
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@2b95e48b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b95e48b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@41925502
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@41925502
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@3d484181
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d484181
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37bd68c3
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37bd68c3
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@45cff11c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@45cff11c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@654d8173
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@654d8173
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14f5da2c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14f5da2c
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1eb6749b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1eb6749b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@150ab4ed
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@150ab4ed
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@546ccad7
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@546ccad7
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@25748410
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25748410
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@6bb75258
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6bb75258
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6bb75258
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2783717b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@4baf352a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4baf352a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4baf352a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22d6f11
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@553f1d75
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@4de41af9
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4de41af9
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6cbcf243
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6cbcf243
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@269f4bad
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@269f4bad
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@40e10ff8
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40e10ff8
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33e01298
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33e01298
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b3c354a
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2f9a01c1
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2f9a01c1
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2f9a01c1
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f446bef
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f446bef
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f446bef
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@72445aba
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@458342d3
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@51e8e6e6
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@51e8e6e6
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@51e8e6e6
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dbf4cbd
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dbf4cbd
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dbf4cbd
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@7e3060d8
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@7b64240d
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@6d24ffa1
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d24ffa1
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@878452d
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@6b54655f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b54655f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@71984c3
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71984c3
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@277f7dd3
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@470a696f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e8f7922
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@2c3dec30
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c3dec30
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c56e013
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fc9dfc5
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40258c2f
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2cac4385
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6731787b
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16f7b4af
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7adf16aa
[29/09/22 10:54:40:040 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@34a1d21f
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[29/09/22 10:54:40:040 IST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
[29/09/22 10:54:40:040 IST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
[29/09/22 10:54:40:040 IST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[29/09/22 10:54:40:040 IST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL57InnoDBDialect
[29/09/22 10:54:40:040 IST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[29/09/22 10:54:40:040 IST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[29/09/22 10:54:40:040 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21ec5d87] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25f9407e]
[29/09/22 10:54:40:040 IST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[29/09/22 10:54:41:041 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spitter
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:54:41:041 IST] DEBUG annotations.EntityBinder: Import with entity name Spitter
[29/09/22 10:54:41:041 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spitter on table Spitter
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:54:41:041 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:id]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:54:41:041 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=email, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property email with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:email]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for email
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property email
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property fullName with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:fullName]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for fullName
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property fullName
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=password, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property password with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:password]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for password
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property password
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=updateByEmail, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property updateByEmail with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:updateByEmail]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for updateByEmail
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property updateByEmail
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=username, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property username with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:username]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for username
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property username
[29/09/22 10:54:41:041 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spittle
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:54:41:041 IST] DEBUG annotations.EntityBinder: Import with entity name Spittle
[29/09/22 10:54:41:041 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spittle on table Spittle
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:54:41:041 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:id]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:54:41:041 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=message, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property message with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:message]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for message
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property message
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=postedTime, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property postedTime with lazy=false
[29/09/22 10:54:41:041 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:postedTime]
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for postedTime
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property postedTime
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='spitter', referencedColumn='', mappedBy=''}
[29/09/22 10:54:41:041 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=spitter, insertable=true, updatable=true, unique=false}
[29/09/22 10:54:41:041 IST] DEBUG annotations.PropertyBinder: Building property spitter
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for email
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for fullName
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for password
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for updateByEmail
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for username
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for message
[29/09/22 10:54:41:041 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for postedTime
[29/09/22 10:54:41:041 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spitter]
[29/09/22 10:54:41:041 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spittle]
[29/09/22 10:54:41:041 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:54:41:041 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:54:41:041 IST] DEBUG internal.SessionFactoryImpl: Building session factory
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: SessionFactory name : null
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Statistics: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Default entity-mode: pojo
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Default batch fetch size: -1
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Default null ordering: NONE
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Query language substitutions: {}
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Named query checking : enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Second-level cache: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Second-level query cache: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Second-level query cache factory: null
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Second-level cache region prefix: null
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JDBC batch size: 15
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Scrollable result sets: enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Wrap result sets: disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JDBC result set fetch size: null
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Connection release mode: ON_CLOSE
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: Generate SQL with comments: enabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JPA compliance - query : disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JPA compliance - closed-handling : disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JPA compliance - lists : disabled
[29/09/22 10:54:41:041 IST] DEBUG cfg.Settings: JPA compliance - transactions : disabled
[29/09/22 10:54:41:041 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:54:41:041 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:54:41:041 IST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[29/09/22 10:54:41:041 IST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3c5a54b7, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect, java.class.path=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\test-classes;C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\classes;C:\Users\Narayan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Narayan\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\Narayan\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-dbcp2\2.9.0\commons-dbcp2-2.9.0.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-pool2\2.10.0\commons-pool2-2.10.0.jar;C:\Users\Narayan\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Narayan\.m2\repository\com\zaxxer\HikariCP\3.0.0\HikariCP-3.0.0.jar;C:\Users\Narayan\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.11.Final\hibernate-entitymanager-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-core\5.6.11.Final\hibernate-core-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Narayan\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Narayan\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Narayan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Narayan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Narayan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Narayan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Narayan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Narayan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Narayan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Narayan\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\Narayan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-orm\5.3.23\spring-orm-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jdbc\5.3.23\spring-jdbc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-tx\5.3.23\spring-tx-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-webmvc\5.3.23\spring-webmvc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-web\5.3.23\spring-web-5.3.23.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\java_home\java_old\jdk1.8.0_202\jre\bin, hibernate.use_sql_comments=true, sun.java.command=com.souritra.test.common.Test, sun.cpu.endian=little, user.home=C:\Users\Narayan, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\java_home\java_old\jdk1.8.0_202\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\java_home\java_old\jdk1.8.0_202\jre\lib\resources.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\rt.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jsse.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jce.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\charsets.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jfr.jar;C:\java_home\java_old\jdk1.8.0_202\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_202-b08, user.name=Narayan, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@73d16e93], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Narayan\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=1.8.0_202, user.dir=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61f2c3f0, java.library.path=C:\java_home\java_old\jdk1.8.0_202\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin/server;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/lib/amd64;C:\java_home\java_old\jdk1.8.0_202\bin;C:\home_kafka\confluent_latest_windows_amd64\confluent;Z:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\home_tools\gradle-7.0-all\gradle-7.0\bin;C:\home_tools\apache-maven-3.6.3\bin;C:\home_tools\gradle-6.8.2\bin;C:\Python27\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\WINDOWS\System32\OpenSSH\;C:\home_scala\bin;C:\home_tools\sbt\bin;C:\home_tools\Git\cmd;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\home_tools\sbt-1.6.2\sbt\\bin;C:\home_bigdata_tools\kafka_2.12-1.0.0\bin\windows;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\;C:\Users\Narayan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Narayan\AppData\Local\Programs\Microsoft VS Code\bin;C:\home_ide\spring-tool-suite-3.9.7\sts-bundle\sts-3.9.7.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.202-b08, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.ext.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[29/09/22 10:54:41:041 IST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[29/09/22 10:54:41:041 IST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[29/09/22 10:54:41:041 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21ec5d87] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@400d912a]
[29/09/22 10:54:41:041 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:54:41:041 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:54:41:041 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:54:41:041 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:54:42:042 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:54:42:042 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:54:42:042 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:54:42:042 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spittle
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spittle */ select id from Spittle where id =?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spittle */ select spittle_.id, spittle_.message as message2_1_, spittle_.postedTime as postedti3_1_, spittle_.spitter as spitter4_1_ from Spittle spittle_ where spittle_.id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter, id) values (?, ?, ?, ?)
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spittle */ update Spittle set message=?, postedTime=?, spitter=? where id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spittle */ delete from Spittle where id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter) values (?, ?, ?)
[29/09/22 10:54:42:042 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b0ae4c]
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : message
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : postedTime
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter
[29/09/22 10:54:42:042 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@724c5cbe]
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.email
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.fullName
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.password
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.updateByEmail
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.username
[29/09/22 10:54:42:042 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:54:42:042 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:54:42:042 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spittle)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spittle, querySpaceUid=<gen:0>, path=spittr.domain.Spittle)
          - EntityAttributeFetchImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:1>, path=spittr.domain.Spittle.spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spittle)
          - SQL table alias mapping - spittle0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(spitter)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=spittr.domain.Spitter)
                - SQL table alias mapping - spitter1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[29/09/22 10:54:42:042 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spittle [NONE]: select spittle0_.id as id1_1_0_, spittle0_.message as message2_1_0_, spittle0_.postedTime as postedti3_1_0_, spittle0_.spitter as spitter4_1_0_, spitter1_.id as id1_0_1_, spitter1_.email as email2_0_1_, spitter1_.fullname as fullname3_0_1_, spitter1_.password as password4_0_1_, spitter1_.updateByEmail as updateby5_0_1_, spitter1_.username as username6_0_1_ from Spittle spittle0_ left outer join Spitter spitter1_ on spittle0_.spitter=spitter1_.id where spittle0_.id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spitter
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spitter */ select id from Spitter where id =?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spitter */ select spitter_.id, spitter_.email as email2_0_, spitter_.fullname as fullname3_0_, spitter_.password as password4_0_, spitter_.updateByEmail as updateby5_0_, spitter_.username as username6_0_ from Spitter spitter_ where spitter_.id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username, id) values (?, ?, ?, ?, ?, ?)
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spitter */ update Spitter set email=?, fullname=?, password=?, updateByEmail=?, username=? where id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spitter */ delete from Spitter where id=?
[29/09/22 10:54:42:042 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username) values (?, ?, ?, ?, ?)
[29/09/22 10:54:42:042 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d96250]
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : email
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : fullName
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : password
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : updateByEmail
[29/09/22 10:54:42:042 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : username
[29/09/22 10:54:42:042 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:54:42:042 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:54:42:042 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spitter)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:0>, path=spittr.domain.Spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spitter)
          - SQL table alias mapping - spitter0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[29/09/22 10:54:42:042 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spitter [NONE]: select spitter0_.id as id1_0_0_, spitter0_.email as email2_0_0_, spitter0_.fullname as fullname3_0_0_, spitter0_.password as password4_0_0_, spitter0_.updateByEmail as updateby5_0_0_, spitter0_.username as username6_0_0_ from Spitter spitter0_ where spitter0_.id=?
[29/09/22 10:54:42:042 IST] DEBUG mapping.Table: No alter strings for table : Spitter
[29/09/22 10:54:42:042 IST] DEBUG mapping.Table: No alter strings for table : Spittle
[29/09/22 10:54:43:043 IST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[29/09/22 10:54:43:043 IST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[29/09/22 10:54:43:043 IST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:54:43:043 IST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:54:43:043 IST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[29/09/22 10:54:43:043 IST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[29/09/22 10:54:43:043 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:54:43:043 IST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@14d8444b
[29/09/22 10:54:43:043 IST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: b7b01838-4ebe-41dc-914f-1d28411d3e20 (<unnamed>)
[29/09/22 10:54:43:043 IST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
[29/09/22 10:55:15:015 IST] DEBUG jboss.logging: Logging Provider: org.jboss.logging.Log4jLoggerProvider
[29/09/22 10:55:15:015 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[29/09/22 10:55:15:015 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[29/09/22 10:55:15:015 IST] DEBUG internal.IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[29/09/22 10:55:15:015 IST]  INFO hibernate.Version: HHH000412: Hibernate ORM core version 5.6.11.Final
[29/09/22 10:55:15:015 IST] DEBUG cfg.Environment: HHH000206: hibernate.properties not found
[29/09/22 10:55:16:016 IST] DEBUG cfg.Configuration: Building session factory using internal StandardServiceRegistryBuilder
[29/09/22 10:55:16:016 IST] DEBUG spi.ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[29/09/22 10:55:16:016 IST] DEBUG cfg.Configuration: Building session factory using provided StandardServiceRegistry
[29/09/22 10:55:16:016 IST] DEBUG internal.RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[29/09/22 10:55:16:016 IST] DEBUG internal.RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[29/09/22 10:55:16:016 IST]  INFO common.Version: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ed3068a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ed3068a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ed3068a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a8e6492
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b324585
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@662f5666
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@502f1f4c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@502f1f4c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@502f1f4c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@4fbda97b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@4fbda97b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fbda97b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4879f0f2
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4879f0f2
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879f0f2
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5b43fbf6
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5b43fbf6
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b43fbf6
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@a4b2d8f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@a4b2d8f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@a4b2d8f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@2fea7088
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@2fea7088
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fea7088
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40f1be1b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40f1be1b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40f1be1b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b9ce1bf
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b9ce1bf
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@609640d5
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@609640d5
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@62ea3440
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@62ea3440
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66ce957f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@666b83a4
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@2b95e48b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b95e48b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@41925502
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@41925502
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@3d484181
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d484181
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37bd68c3
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37bd68c3
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@45cff11c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@45cff11c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@654d8173
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@654d8173
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14f5da2c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14f5da2c
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1eb6749b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1eb6749b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@150ab4ed
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@150ab4ed
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@546ccad7
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@546ccad7
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@25748410
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25748410
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@6bb75258
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6bb75258
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6bb75258
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2783717b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@4baf352a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4baf352a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4baf352a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22d6f11
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@553f1d75
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@4de41af9
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4de41af9
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6cbcf243
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6cbcf243
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@269f4bad
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@269f4bad
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@40e10ff8
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40e10ff8
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33e01298
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33e01298
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b3c354a
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2f9a01c1
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2f9a01c1
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2f9a01c1
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f446bef
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f446bef
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f446bef
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@72445aba
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@458342d3
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@51e8e6e6
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@51e8e6e6
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@51e8e6e6
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dbf4cbd
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dbf4cbd
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dbf4cbd
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@7e3060d8
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@7b64240d
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@6d24ffa1
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d24ffa1
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@878452d
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@6b54655f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b54655f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@71984c3
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71984c3
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@277f7dd3
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@470a696f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e8f7922
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@2c3dec30
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c3dec30
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c56e013
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fc9dfc5
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40258c2f
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2cac4385
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6731787b
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16f7b4af
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7adf16aa
[29/09/22 10:55:16:016 IST] DEBUG type.BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@34a1d21f
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[29/09/22 10:55:16:016 IST] DEBUG internal.JdbcEnvironmentInitiator: Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
[29/09/22 10:55:16:016 IST] DEBUG internal.JdbcEnvironmentInitiator: Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
[29/09/22 10:55:16:016 IST] DEBUG internal.JdbcEnvironmentInitiator: JDBC version : 4.2
[29/09/22 10:55:16:016 IST]  INFO dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL57InnoDBDialect
[29/09/22 10:55:16:016 IST] DEBUG spi.IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in more than one case
[29/09/22 10:55:16:016 IST] DEBUG spi.IdentifierHelperBuilder: IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[29/09/22 10:55:16:016 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21ec5d87] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25f9407e]
[29/09/22 10:55:17:017 IST] DEBUG relational.Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[29/09/22 10:55:17:017 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spitter
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:55:17:017 IST] DEBUG annotations.EntityBinder: Import with entity name Spitter
[29/09/22 10:55:17:017 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spitter on table Spitter
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:55:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:id]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:55:17:017 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=email, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property email with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:email]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for email
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property email
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property fullName with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:fullName]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for fullName
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property fullName
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=password, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property password with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:password]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for password
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property password
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=updateByEmail, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property updateByEmail with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:updateByEmail]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for updateByEmail
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property updateByEmail
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spitter), mappingColumn=username, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property username with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spitter:username]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for username
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property username
[29/09/22 10:55:17:017 IST] DEBUG cfg.AnnotationBinder: Binding entity from annotated class: spittr.domain.Spittle
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[29/09/22 10:55:17:017 IST] DEBUG annotations.EntityBinder: Import with entity name Spittle
[29/09/22 10:55:17:017 IST] DEBUG annotations.EntityBinder: Bind entity spittr.domain.Spittle on table Spittle
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=id, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:55:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property id with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:id]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for id
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property id
[29/09/22 10:55:17:017 IST] DEBUG cfg.BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=message, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property message with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:message]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for message
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property message
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=postedTime, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: MetadataSourceProcessor property postedTime with lazy=false
[29/09/22 10:55:17:017 IST] DEBUG cfg.AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [spittr.domain.Spittle:postedTime]
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: building SimpleValue for postedTime
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property postedTime
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='spitter', referencedColumn='', mappedBy=''}
[29/09/22 10:55:17:017 IST] DEBUG cfg.Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Spittle), mappingColumn=spitter, insertable=true, updatable=true, unique=false}
[29/09/22 10:55:17:017 IST] DEBUG annotations.PropertyBinder: Building property spitter
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for email
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for fullName
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for password
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for updateByEmail
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for username
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for id
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for message
[29/09/22 10:55:17:017 IST] DEBUG annotations.SimpleValueBinder: Starting fillSimpleValue for postedTime
[29/09/22 10:55:17:017 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spitter]
[29/09/22 10:55:17:017 IST] DEBUG mapping.PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [spittle]
[29/09/22 10:55:17:017 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:55:17:017 IST] DEBUG internal.InFlightMetadataCollectorImpl: Resolving reference to class: spittr.domain.Spitter
[29/09/22 10:55:17:017 IST] DEBUG internal.SessionFactoryImpl: Building session factory
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: SessionFactory name : null
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Automatic flush during beforeCompletion(): enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Automatic session close at end of transaction: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Statistics: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Deleted entity synthetic identifier rollback: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Default entity-mode: pojo
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Allow initialization of lazy state outside session : disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Using BatchFetchStyle : LEGACY
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Default batch fetch size: -1
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Maximum outer join fetch depth: 2
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Default null ordering: NONE
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Order SQL updates by primary key: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Order SQL inserts for batching: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: multi-tenancy strategy : NONE
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JTA Track by Thread: enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Query language substitutions: {}
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Named query checking : enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Second-level cache: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Second-level query cache: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Second-level query cache factory: null
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Second-level cache region prefix: null
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Optimize second-level cache for minimal puts: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Structured second-level cache entries: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Second-level cache direct-reference entries: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Automatic eviction of collection cache: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JDBC batch size: 15
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JDBC batch updates for versioned data: enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Scrollable result sets: enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Wrap result sets: disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JDBC3 getGeneratedKeys(): enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JDBC result set fetch size: null
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Connection release mode: ON_CLOSE
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: Generate SQL with comments: enabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JPA compliance - query : disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JPA compliance - closed-handling : disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JPA compliance - lists : disabled
[29/09/22 10:55:17:017 IST] DEBUG cfg.Settings: JPA compliance - transactions : disabled
[29/09/22 10:55:17:017 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:55:17:017 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:55:17:017 IST] DEBUG internal.SessionFactoryImpl: Session factory constructed with filter configurations : {}
[29/09/22 10:55:17:017 IST] DEBUG internal.SessionFactoryImpl: Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3c5a54b7, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect, java.class.path=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\test-classes;C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate\target\classes;C:\Users\Narayan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Narayan\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\Narayan\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-dbcp2\2.9.0\commons-dbcp2-2.9.0.jar;C:\Users\Narayan\.m2\repository\org\apache\commons\commons-pool2\2.10.0\commons-pool2-2.10.0.jar;C:\Users\Narayan\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Narayan\.m2\repository\com\zaxxer\HikariCP\3.0.0\HikariCP-3.0.0.jar;C:\Users\Narayan\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.11.Final\hibernate-entitymanager-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Narayan\.m2\repository\org\hibernate\hibernate-core\5.6.11.Final\hibernate-core-5.6.11.Final.jar;C:\Users\Narayan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Narayan\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Narayan\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Narayan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Narayan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Narayan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Narayan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Narayan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Narayan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Narayan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Narayan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Narayan\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\Narayan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-orm\5.3.23\spring-orm-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-jdbc\5.3.23\spring-jdbc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-tx\5.3.23\spring-tx-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-webmvc\5.3.23\spring-webmvc-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;C:\Users\Narayan\.m2\repository\org\springframework\spring-web\5.3.23\spring-web-5.3.23.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\java_home\java_old\jdk1.8.0_202\jre\bin, hibernate.use_sql_comments=true, sun.java.command=com.souritra.test.common.Test, sun.cpu.endian=little, user.home=C:\Users\Narayan, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\java_home\java_old\jdk1.8.0_202\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\java_home\java_old\jdk1.8.0_202\jre\lib\resources.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\rt.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jsse.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jce.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\charsets.jar;C:\java_home\java_old\jdk1.8.0_202\jre\lib\jfr.jar;C:\java_home\java_old\jdk1.8.0_202\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_202-b08, user.name=Narayan, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@73d16e93], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Narayan\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=1.8.0_202, user.dir=C:\home_workspace\eclipse\java\hibernate\jdbc_v2\sp-hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61f2c3f0, java.library.path=C:\java_home\java_old\jdk1.8.0_202\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin/server;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/bin;C:/java_home/java_old/jdk1.8.0_202/bin/../jre/lib/amd64;C:\java_home\java_old\jdk1.8.0_202\bin;C:\home_kafka\confluent_latest_windows_amd64\confluent;Z:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\home_tools\gradle-7.0-all\gradle-7.0\bin;C:\home_tools\apache-maven-3.6.3\bin;C:\home_tools\gradle-6.8.2\bin;C:\Python27\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\WINDOWS\System32\OpenSSH\;C:\home_scala\bin;C:\home_tools\sbt\bin;C:\home_tools\Git\cmd;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\apps\opt\spark-3.0.3-bin-hadoop2.7\bin;C:\home_tools\sbt-1.6.2\sbt\\bin;C:\home_bigdata_tools\kafka_2.12-1.0.0\bin\windows;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Narayan\AppData\Local\Programs\Python\Python310\;C:\Users\Narayan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Narayan\AppData\Local\Programs\Microsoft VS Code\bin;C:\home_ide\spring-tool-suite-3.9.7\sts-bundle\sts-3.9.7.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.202-b08, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.ext.dirs=C:\java_home\java_old\jdk1.8.0_202\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[29/09/22 10:55:17:017 IST] DEBUG spi.JaccIntegrator: Skipping JACC integration as it was not enabled
[29/09/22 10:55:17:017 IST] DEBUG internal.SessionFactoryImpl: Instantiated session factory
[29/09/22 10:55:17:017 IST] DEBUG spi.TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21ec5d87] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@400d912a]
[29/09/22 10:55:17:017 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:55:17:017 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:55:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spittle] is safe
[29/09/22 10:55:17:017 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spittle
[29/09/22 10:55:18:018 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:55:18:018 IST] DEBUG bytecode.interceptor: To-one property `spittr.domain.Spittle#spitter` was mapped with LAZY + NO_PROXY but the class was not enhanced
[29/09/22 10:55:18:018 IST] DEBUG internal.ClassLoaderAccessImpl: Not known whether passed class name [spittr.domain.Spitter] is safe
[29/09/22 10:55:18:018 IST] DEBUG internal.ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : spittr.domain.Spitter
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spittle
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spittle */ select id from Spittle where id =?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spittle */ select spittle_.id, spittle_.message as message2_1_, spittle_.postedTime as postedti3_1_, spittle_.spitter as spitter4_1_ from Spittle spittle_ where spittle_.id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter, id) values (?, ?, ?, ?)
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spittle */ update Spittle set message=?, postedTime=?, spitter=? where id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spittle */ delete from Spittle where id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spittle */ insert into Spittle (message, postedTime, spitter) values (?, ?, ?)
[29/09/22 10:55:18:018 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b0ae4c]
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : message
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : postedTime
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter
[29/09/22 10:55:18:018 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@724c5cbe]
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.email
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.fullName
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.password
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.updateByEmail
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : spitter.username
[29/09/22 10:55:18:018 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:55:18:018 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:55:18:018 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spittle)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spittle, querySpaceUid=<gen:0>, path=spittr.domain.Spittle)
          - EntityAttributeFetchImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:1>, path=spittr.domain.Spittle.spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spittle)
          - SQL table alias mapping - spittle0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(spitter)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=spittr.domain.Spitter)
                - SQL table alias mapping - spitter1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[29/09/22 10:55:18:018 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spittle [NONE]: select spittle0_.id as id1_1_0_, spittle0_.message as message2_1_0_, spittle0_.postedTime as postedti3_1_0_, spittle0_.spitter as spitter4_1_0_, spitter1_.id as id1_0_1_, spitter1_.email as email2_0_1_, spitter1_.fullname as fullname3_0_1_, spitter1_.password as password4_0_1_, spitter1_.updateByEmail as updateby5_0_1_, spitter1_.username as username6_0_1_ from Spittle spittle0_ left outer join Spitter spitter1_ on spittle0_.spitter=spitter1_.id where spittle0_.id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister: Static SQL for entity: spittr.domain.Spitter
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Version select: /* get version spittr.domain.Spitter */ select id from Spitter where id =?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Snapshot select: /* get current state spittr.domain.Spitter */ select spitter_.id, spitter_.email as email2_0_, spitter_.fullname as fullname3_0_, spitter_.password as password4_0_, spitter_.updateByEmail as updateby5_0_, spitter_.username as username6_0_ from Spitter spitter_ where spitter_.id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Insert 0: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username, id) values (?, ?, ?, ?, ?, ?)
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Update 0: /* update spittr.domain.Spitter */ update Spitter set email=?, fullname=?, password=?, updateByEmail=?, username=? where id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Delete 0: /* delete spittr.domain.Spitter */ delete from Spitter where id=?
[29/09/22 10:55:18:018 IST] DEBUG entity.AbstractEntityPersister:  Identity insert: /* insert spittr.domain.Spitter */ insert into Spitter (email, fullname, password, updateByEmail, username) values (?, ?, ?, ?, ?)
[29/09/22 10:55:18:018 IST] DEBUG spaces.QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d96250]
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : email
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : fullName
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : password
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : updateByEmail
[29/09/22 10:55:18:018 IST] DEBUG spi.MetamodelGraphWalker: Visiting attribute path : username
[29/09/22 10:55:18:018 IST] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan...
[29/09/22 10:55:18:018 IST] DEBUG internal.LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0>
[29/09/22 10:55:18:018 IST] DEBUG spi.LoadPlanTreePrinter: LoadPlan(entity=spittr.domain.Spitter)
    - Returns
       - EntityReturnImpl(entity=spittr.domain.Spitter, querySpaceUid=<gen:0>, path=spittr.domain.Spitter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=spittr.domain.Spitter)
          - SQL table alias mapping - spitter0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[29/09/22 10:55:18:018 IST] DEBUG plan.EntityLoader: Static select for entity spittr.domain.Spitter [NONE]: select spitter0_.id as id1_0_0_, spitter0_.email as email2_0_0_, spitter0_.fullname as fullname3_0_0_, spitter0_.password as password4_0_0_, spitter0_.updateByEmail as updateby5_0_0_, spitter0_.username as username6_0_0_ from Spitter spitter0_ where spitter0_.id=?
[29/09/22 10:55:19:019 IST] DEBUG mapping.Table: No alter strings for table : Spitter
[29/09/22 10:55:19:019 IST] DEBUG mapping.Table: No alter strings for table : Spittle
[29/09/22 10:55:19:019 IST] DEBUG internal.JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
[29/09/22 10:55:19:019 IST] DEBUG internal.JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[29/09/22 10:55:19:019 IST] DEBUG internal.StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:55:19:019 IST]  INFO internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[29/09/22 10:55:19:019 IST] DEBUG spi.NamedQueryRepository: Checking 0 named HQL queries
[29/09/22 10:55:19:019 IST] DEBUG spi.NamedQueryRepository: Checking 0 named SQL queries
[29/09/22 10:55:19:019 IST] DEBUG internal.SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[29/09/22 10:55:19:019 IST] DEBUG internal.SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@14d8444b
[29/09/22 10:55:19:019 IST] DEBUG internal.SessionFactoryRegistry: Registering SessionFactory: fb20fedf-83ba-45c4-8195-1779d861faa7 (<unnamed>)
[29/09/22 10:55:19:019 IST] DEBUG internal.SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
