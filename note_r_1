persist - Make an instance managed and persistent.
merge - Merge the state of the given entity into the current persistence context.
remove - Remove the entity instance.
find - Find by primary key. Search for an entity of the specified class and primary key. If the entity instance is contained in the persistence context, it is returned from there.
getReference – returns and instance which is lazily fetched and will throw EntityNotFoundException when the instance is accessed for the first time.
flush – Synchronizes the persistence context with the database.
setFlushMode – set the flush mode for all the objects of the persistence context.
getFlushMode – get the flush mode for all the objects of the persistence context.
lock - Lock an entity instance that is contained in the persistence context with the specified lock mode type.
refresh – it refreshes the state of the instance from the database also it will overwrite the changes to the entity.
clear - Clear the persistence context, causing all managed entities to become detached. Changes made to entities that have not been flushed to the database will not be persisted.
detach – this is similar to the clear method, only addition is the entity which previously referenced the detached object will continue to do so.
contains – it checks if the managed entity belongs to the current persistence context.
getLockMode – get the current lock mode for entity instance.
setProperty – set an entity manager property or hint.
getProperties – get the properties and hints associated with the entity manager.
createQuery - Create an instance of Query for executing a Java Persistence query language statement.
createNamedQuery - Create an instance of Query for executing a Java Persistence named query language statement.
createNativeQuery - Create an instance of Query for executing a native sql statement.
createNamedStoredProcedureQuery - Create an instance of StoredProcedureQuery for executing a stored procedure in the database.
createStoredProcedureQuery - Create an instance of StoredProcedureQuery for executing a stored procedure in the database.
joinTransaction - Indicate to the entity manager that a JTA transaction is active. This method should be called on a JTA application managed entity manager that was created outside the scope of the active transaction to associate it with the current JTA transaction.
isJoinedToTransaction – it determines if the entityManager is linked to the current transaction.
unwrap - Return an object of the specified type to allow access to the provider-specific API
getDelegate – return the provider object for the entityManager.
close – close an application-managed entityManager.
isOpen – determine if the entityManager is open.
getTransaction - Return the resource-level EntityTransaction object.
getEntityManagerFactory – provides the entity manager factory for the entity manager.
getCriteriaBuilder - Return an instance of CriteriaBuilder for the creation of CriteriaQuery objects.
getMetamodel - Return an instance of Metamodel interface for access to the metamodel of the persistence unit.
createEntityGraph - Return a mutable EntityGraph that can be used to dynamically create an EntityGraph.
getEntityGraph – returns a named entityGraph